(* AUTOMATICALLY GENERATED BY codegen/main.ml *)

open Lwt.Syntax

exception BadRequest of string

let create_user (req : Dream.request) =
  let* body = Dream.body req in
  let body =
    Generated_server_types.CreateUserInput.t_of_yojson
      (Yojson.Safe.from_string body)
  in
  let* (result : Generated_server_types.CreateUserOutput.t) =
    Handlers.Server.create_user req body
  in
  result |> Generated_server_types.CreateUserOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let users (req : Dream.request) =
  let query =
    match Generated_server_types.UsersQuery.parse_query req with
    | Ok q -> q
    | Error msg -> raise (BadRequest msg)
  in
  let* (result : Generated_server_types.UsersOutput.t) =
    Handlers.Server.users req query
  in
  result |> Generated_server_types.UsersOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let get_user (req : Dream.request) =
  let user_id = Dream.param req "user_id" in
  let* (result : Generated_server_types.GetUserOutput.t) =
    Handlers.Server.get_user req user_id
  in
  result |> Generated_server_types.GetUserOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let delete_user (req : Dream.request) =
  let user_id = Dream.param req "user_id" in
  let* (result : Generated_server_types.DeleteUserOutput.t) =
    Handlers.Server.delete_user req user_id
  in
  result |> Generated_server_types.DeleteUserOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let generate_client_jwt (req : Dream.request) =
  let* body = Dream.body req in
  let body =
    Generated_server_types.GenerateClientJwtInput.t_of_yojson
      (Yojson.Safe.from_string body)
  in
  let* (result : Generated_server_types.GenerateClientJwtOutput.t) =
    Handlers.Server.generate_client_jwt req body
  in
  result |> Generated_server_types.GenerateClientJwtOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let create_conversation (req : Dream.request) =
  let* body = Dream.body req in
  let body =
    Generated_server_types.CreateConversationInput.t_of_yojson
      (Yojson.Safe.from_string body)
  in
  let* (result : Generated_server_types.CreateConversationOutput.t) =
    Handlers.Server.create_conversation req body
  in
  result |> Generated_server_types.CreateConversationOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let update_converstaion (req : Dream.request) =
  let conversation_id = Dream.param req "conversation_id" in
  let* body = Dream.body req in
  let body =
    Generated_server_types.UpdateConverstaionInput.t_of_yojson
      (Yojson.Safe.from_string body)
  in
  let* (result : Generated_server_types.UpdateConverstaionOutput.t) =
    Handlers.Server.update_converstaion req conversation_id body
  in
  result |> Generated_server_types.UpdateConverstaionOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let add_users_to_conversation (req : Dream.request) =
  let conversation_id = Dream.param req "conversation_id" in
  let* body = Dream.body req in
  let body =
    Generated_server_types.AddUsersToConversationInput.t_of_yojson
      (Yojson.Safe.from_string body)
  in
  let* (result : Generated_server_types.AddUsersToConversationOutput.t) =
    Handlers.Server.add_users_to_conversation req conversation_id body
  in
  result |> Generated_server_types.AddUsersToConversationOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let remove_users_from_conversation (req : Dream.request) =
  let conversation_id = Dream.param req "conversation_id" in
  let* body = Dream.body req in
  let body =
    Generated_server_types.RemoveUsersFromConversationInput.t_of_yojson
      (Yojson.Safe.from_string body)
  in
  let* (result : Generated_server_types.RemoveUsersFromConversationOutput.t) =
    Handlers.Server.remove_users_from_conversation req conversation_id body
  in
  result |> Generated_server_types.RemoveUsersFromConversationOutput.yojson_of_t
  |> Yojson.Safe.to_string |> Dream.json

let routes =
  [
    Dream.post "/_/users" create_user;
    Dream.get "/_/users" users;
    Dream.get "/_/user/:user_id" get_user;
    Dream.delete "/_/user/:user_id" delete_user;
    Dream.post "/_/gen-client-jwt" generate_client_jwt;
    Dream.post "/_/converations" create_conversation;
    Dream.post "/_/converation/:conversation_id" update_converstaion;
    Dream.post "/_/converation/:conversation_id/add-users"
      add_users_to_conversation;
    Dream.post "/_/converation/:conversation_id/remove-users"
      remove_users_from_conversation;
  ]
